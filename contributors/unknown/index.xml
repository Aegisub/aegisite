<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unknown on</title><link>https://aegisub.github.io/aegisite/contributors/unknown/</link><description>Recent content in Unknown on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 21 Dec 2008 01:01:00 +0000</lastBuildDate><atom:link href="https://aegisub.github.io/aegisite/contributors/unknown/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't use \fad on fades to black</title><link>https://aegisub.github.io/aegisite/blog/dont-use-%5Cfad-on-fades-to-black/</link><pubDate>Sun, 21 Dec 2008 01:01:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/dont-use-%5Cfad-on-fades-to-black/</guid><description>Dear typesetters,
I have seen this countless times. Every time, it has bothered me. Please, don&amp;rsquo;t do it anymore.
When the screen fades to black (or white, or any other solid colour, for that matter), DON&amp;rsquo;T use the \fad tag to fade the text along with it. When you use \fad, you&amp;rsquo;re making the text translucent, and not darker. The result is that it will blend with the background - including all the usual associated bugs if you have borders and shadows - and get somewhat darker because the background itself is getting darker - it just won&amp;rsquo;t get as dark as it SHOULD be, and the visual effect is that the text is getting brighter, relative to the background.</description></item><item><title>If programming languages were religions: the aftermath</title><link>https://aegisub.github.io/aegisite/blog/if-programming-languages-were-religions-the-aftermath/</link><pubDate>Sat, 20 Dec 2008 03:37:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/if-programming-languages-were-religions-the-aftermath/</guid><description>Until December 15 2008, aegisub.net would typically get ~350 hits per day. Between December 16 and 19, it got a total of 266 thousand hits, thanks to the &amp;ldquo;If programming languages were religions&amp;hellip;&amp;rdquo; post. So, first of all: Thanks, everybody! All feedback, positive and negative, was greatly appreciated.
First it was put on Digg. Then on reddit. Then, to my great surprise, on Slashdot&amp;hellip; and on slashdot.jp. Stumbleupon. And even on one of my favourite blogs, Pharyngula.</description></item><item><title>If programming languages were religions...</title><link>https://aegisub.github.io/aegisite/blog/if-programming-languages-were-religions/</link><pubDate>Mon, 15 Dec 2008 14:52:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/if-programming-languages-were-religions/</guid><description>And now, for some off-topic:
&amp;ldquo;If programming languages were religions&amp;rdquo; (Inspired by &amp;ldquo;If programming languages were cars&amp;rdquo;)
C would be Judaism - it&amp;rsquo;s old and restrictive, but most of the world is familiar with its laws and respects them. The catch is, you can&amp;rsquo;t convert into it - you&amp;rsquo;re either into it from the start, or you will think that it&amp;rsquo;s insanity. Also, when things go wrong, many people are willing to blame the problems of the world on it.</description></item><item><title>Aegisub 2.1.6 released</title><link>https://aegisub.github.io/aegisite/blog/aegisub-2.1.6-released/</link><pubDate>Wed, 26 Nov 2008 02:31:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/aegisub-2.1.6-released/</guid><description>Ooooooooops.
Apparently the fix on 2.1.5 caused audio selection to become much slower. This release will hopefully fix all of those issues. Since this is a very minor change, you can download a RAR with only the new executable (plus its pdb) and extract it over the 2.1.5 install (typically &amp;ldquo;C:\Program Files\Aegisub&amp;rdquo;). The RAR &amp;ldquo;patch&amp;rdquo; is available here. [Exias&amp;rsquo; mirror]
If you want to download the complete 2.1.6 installer, you can download it here.</description></item><item><title>Aegisub 2.1.5 released</title><link>https://aegisub.github.io/aegisite/blog/aegisub-2.1.5-released/</link><pubDate>Sun, 23 Nov 2008 02:44:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/aegisub-2.1.5-released/</guid><description>Due to a fairly serious bug introduced in 2.1.4, here&amp;rsquo;s 2.1.5. Everyone is advised to update to it.
Fixed a bug in audio display that caused it not to update properly (introduced on 2.1.4) Fixed a bug that caused Aegisub to crash if you attempted to load any ASS subtitles with malformed embedded fonts Tweaked the layout of the visual typesetting bar The win32 binary is available here.</description></item><item><title>Aegisub 2.1.4 Released</title><link>https://aegisub.github.io/aegisite/blog/aegisub-2.1.4-released/</link><pubDate>Fri, 14 Nov 2008 01:46:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/aegisub-2.1.4-released/</guid><description>Version 2.1.4 is now out for Windows. The highlights are:
Hopefully removed the dependency on Visual C++ 2005 SP1 runtimes Greatly improved the draw speed of audio display (should make committing on spectrum mode much faster, depending on your settings) - please let me know if any instabilities are caused by this Fixed the aspect ratio of video when the audio display is too tall Added Hungarian translation Fixed a styling glitch in the fonts collector and translation assistant Made Aegisub capable of running if ffms2.</description></item><item><title>Three things that Java could learn from C++</title><link>https://aegisub.github.io/aegisite/blog/three-things-that-java-could-learn-from-c-/</link><pubDate>Sat, 08 Nov 2008 16:03:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/three-things-that-java-could-learn-from-c-/</guid><description>This is a mostly off-topic rant that is being posted because I know that a good portion of our user base is composed of programmers.
Ever since I started working with Java, a few months ago, there have been many things that I have felt SHOULD be there, but aren&amp;rsquo;t. Three, in particular, have always bothered me: stack building, operator overloading, and const-correctness. For the rest of this post, I will write snippets in both C++ and in Java to illustrate the differences.</description></item><item><title>Aegisub 2.1.3a Released</title><link>https://aegisub.github.io/aegisite/blog/aegisub-2.1.3a-released/</link><pubDate>Wed, 29 Oct 2008 01:54:00 +0000</pubDate><guid>https://aegisub.github.io/aegisite/blog/aegisub-2.1.3a-released/</guid><description>Yes, it took a while, but here&amp;rsquo;s a new release preview build. The biggest changes from 2.1.2 are:
FFmpegSource2 is the new default audio and video provider, replacing Avisynth. This should provide frame-exact seeking (with keyframe support) on AVI, MKV and MP4 files, as well as other benefits. This is still a bit experimental, however. If you have any issues, just switch back to Avisynth in options. The DirectSound audio player was reverted to what it was in 2.</description></item><item><title>Two Firefox extensions that you'll want</title><link>https://aegisub.github.io/aegisite/blog/two-firefox-extensions-that-youll-want/</link><pubDate>Thu, 16 Oct 2008 04:19:00 +0100</pubDate><guid>https://aegisub.github.io/aegisite/blog/two-firefox-extensions-that-youll-want/</guid><description>If you do any sort of Japanese reading on the Internet, you&amp;rsquo;ll want these two Firefox extensions:
XHTML Ruby Support Furigana Injector
The first one adds proper ruby (a.k.a. furigana, in the case of Japanese) support to Firefox. The second one is more interesting: it adds furigana to kanji on websites that don&amp;rsquo;t have it, making it much easier to read Japanese text.
An interesting side-effect of having proper ruby support in Firefox is that the times in blogger look quite odd, with the full date above them.</description></item><item><title>Unicode, UTF-8, UTF-16, UCS-2 - In a Nutshell</title><link>https://aegisub.github.io/aegisite/blog/unicode-utf-8-utf-16-ucs-2-in-a-nutshell/</link><pubDate>Tue, 14 Oct 2008 22:57:00 +0100</pubDate><guid>https://aegisub.github.io/aegisite/blog/unicode-utf-8-utf-16-ucs-2-in-a-nutshell/</guid><description>I have noticed that lots of people have no idea what exactly is the whole &amp;ldquo;Unicode&amp;rdquo;, &amp;ldquo;UTF-8&amp;rdquo;, &amp;ldquo;UTF-16&amp;rdquo; and &amp;ldquo;UCS-2&amp;rdquo; stuff, aside from the fact that it&amp;rsquo;s somehow related to the display of foreign characters. The objective of this post is to briefly explain them and dispel some of the myths associated with them.
Unicode is a coding system used to represent characters from many languages (including Japanese and Chinese) without the need to change your language locale.</description></item></channel></rss>