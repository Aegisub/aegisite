<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<html>
<head>


   <title>Attaching Subtitles to Video</title>
   <meta name="generator" content="Help & Manual">
   <meta name="keywords" content="">

   <style type="text/css">
	a:link { color: #002682 }
	a:hover { color: #FF0000; }
	a:visited { color: #D63078 }
   </style>

<!-- This style sheet goes into compiled HTML HELP -->
   <style type="text/css" media="screen">
	#nsr
	 {
	 padding: 6px 6px 0px 6px;
	 border-bottom: none;
	 background: #649CCC;
	 vertical-align: top;
	 z-index: 2;
	 visibility: visible;
	 left: 0;
	 top: 0;
	 position: absolute;
	 width: 100%;
	 }
	#mainbody
	 {
	 left: 0;
	 top: 0px;
	 margin: 0;
	 position: absolute;
	 padding: 10px;
	 overflow: visible;
	 height: 100%;
	 z-index: 1;
	 background-repeat: no-repeat;
	 background-position: bottom right;
	 background-attachment: fixed;
	 }
   </style>
   <style type="text/css" media="print">
	#nsr
	 { visibility: none; }
	#mainbody
	 { overflow: visible; }
   </style>
   <script type="text/javascript" language="JavaScript" src="nonscroll.js"></script>



    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
   <link type="text/css" href="default.css" rel="stylesheet" />
</head>
<body bgcolor="#FFFFFF" 
 marginheight="0" marginwidth="0" leftmargin="0" topmargin="0"
 scroll="no"
>


<div id="nsr">
<table width="100%" border="0" cellspacing="0" cellpadding="2"
 bgcolor="#649CCC">
  <tr valign="top">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Attaching Subtitles to Video</span></p>

    </td>
    <td align="right">
     <font face="Arial" size="2">
     <a href="introduction.htm"
        onmouseover="document.images.main.src='button_main_h.gif'" 
  	onmouseout="document.images.main.src='button_main.gif'">
        <img name=main src="button_main.gif" border=0 alt="Return to Introduction"></a>&nbsp;
     <a href="options.htm"
        onmouseover="document.images.prev.src='button_prev_h.gif'" 
  	onmouseout="document.images.prev.src='button_prev.gif'"><img name=prev src="button_prev.gif" border=0 alt="Previous page"></a>&nbsp;
     

     <a href="typesetting.htm"
        onmouseover="document.images.next.src='button_next_h.gif'" 
  	onmouseout="document.images.next.src='button_next.gif'"><img name=next src="button_next.gif" border=0 alt="Next page"></a>
     
     </font>
    </td>
  </tr>
</table>
</div>


<div id="mainbody">
<p>&nbsp;</p>
<p>In digital encoding, there are two main ways of including subtitles in a video. There is softsubbing, and hardsubbing. Both methods has unique advantages and disadvantages, along with various arguments both for and against each method.</p>
<p class="p_Heading1"><span class="f_Heading1">&nbsp;</span></p>
<p class="p_Heading1"><span class="f_Heading1" style="color: #000000;">Hardsubbing</span></p>
<p>&nbsp;</p>
<p>Hardsubbing is a method that embeds subtitles into the actual video portion of a movie. Digital hardsubs are much like subtitled VHS files, the subtitles cannot be turned off.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;">Advantages of Hardsubbing</span></p>
<p>&nbsp;</p>
<p>Hardsubbing is usually much less demanding on the playback device. Since the text is already part of the video, it will only take as much processing as the unsubtitled video would. You are also often able to make special effects that would be difficult to replicate in a soft subtitle format, because of the large amount of CPU usage required to renderer them. Even in softsubbed anime fansubs, the opening and closing karaoke are often hardsubbed because of the special effects used.</p>
<p>&nbsp;</p>
<p>Some people argue that with hardsubs, scripts are harder to steal, since the text is embedded in the image - thieves cannot simply extract subtitles as in a softsub. However, the presence of very good subtitle extractors designed for the purpose of extracting this embedded text removes much of the argument that hardsubs prevent script stealing.</p>
<p>&nbsp;</p>
<p>Many playback devices and computer platforms cannot display the special fonts and formattings that softsubs contain, but this problem is removed with hardsubs, where the style is preserved. Also, these stylings will show back exactly the same on any device, unlike softsubs which depend on the playback device to properly intrepret and display the stylings.</p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Disadvantages of Hardsubbing</span></p>
<p>&nbsp;</p>
<p>Despite what some may call numerous advantages for hardsubbing, there are several distinct disadvantages that should be evaluated before making a decision.</p>
<p>&nbsp;</p>
<p>The method of hardsubbing requires that the source video is re-encoded so the subtitles can be written on the image. This, by the nature of lossy video encoding, causes a reduction in video quality.</p>
<p>&nbsp;</p>
<p>Subtitles add a sharp contrast in a video image due to their nature. This will cause compression artifacts along the edges of the encoded subtitle, and blurring of the subtitle. This effect is especially evident at lower bitrates.</p>
<p>&nbsp;</p>
<p>In some circumstances, the inclusion of the subtitles will cause an increase in the bitrate needed for the video to keep the same quality. This, of course, means an increased filesize, or lower quality at the same size.</p>
<p>&nbsp;</p>
<p>Changing the subtitles requires a re-encode of the video source, which can add a lot of time and extra work to the release process.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p class="p_Heading1"><span class="f_Heading1" style="color: #000000;">Softsubbing</span></p>
<p>&nbsp;</p>
<p>Softsubbing is a method that keeps subtitles seperate from the video and relies on the playback device to combine the two when the video is being played. This method can be best compared to subtitles on most DVDs. The subtitling can be turned on or off as needed, and multiple languages can be supported with just one combined media file. Unlike with a DVD though, digital softsubs are actually text (DVD subtitles are pictures) which adds many nice features at the cost of complexity.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;">Advantages of Softsubbing</span></p>
<p>&nbsp;</p>
<p>Softsubs are much clearer on display. Since they are not part of the video image, video compression does not affect them, and with a good subtitle renderer, they are sharp and crisp - a huge benefit to readability.</p>
<p>&nbsp;</p>
<p>Softsubs can be smaller. Since the subtitle is just a text file, it can take up less room because it isn't hogging video bitrate. This allows for an encoder to either make a smaller file with the same video quality, or a same-sized file with higher video quality.</p>
<p>&nbsp;</p>
<p>People with vision problems have an opportunity to adjust how the subtitles look on-screen.</p>
<p>&nbsp;</p>
<p>Without a huge impact on size, multiple languages can be supported in one video file.</p>
<p>&nbsp;</p>
<p>If you find a subtitling mistake in a file, you can fix it without having to re-encode the video - saving a lot of time.</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Disadvantages of Softsubbing</span></p>
<p>&nbsp;</p>
<p>Softsubs add processing complexity to the video. The playback device has to render and overlay the text before displaying the video, as a result, this means that low-powered devices will not be able to play the video.</p>
<p>&nbsp;</p>
<p>Since the subtitles are bundled as straight text they are very easy to extract and use. This makes things easier on bootleggers or other script stealers. Note that grabbing subtitles from a hardsub is very easy currently, so this argument doesn't hold much weight.</p>
<p>&nbsp;</p>
<p>The playback device is responsible for rendering the subtitles on screen. As a result, they might not look the same as the subtitler intended. In some cases, the playback device might not support the subtitle format, or might have bugs with it.</p>
<p>&nbsp;</p>
<p>The AVI file format is not reliable for supporting softsubs, if you plan to use it. Please note that Matroska (MKV) is very well supported by computers, so this isn't a major negative.</p>
<p>&nbsp;</p>
<p>Subtitles with effects added (usually for karaoke) take up a lot of processing time, and may cause playback issues if the device cannot handle the processing requirements. A solution for this is to hardsub the complex parts such as opening and ending karaoke, and softsub the normal dialog.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p class="p_Heading1"><span class="f_Heading1" style="color: #000000;">What method do I choose?</span></p>
<p>&nbsp;</p>
<p>The method you should choose depends greatly on your audience. Will they have relatively new and powerful playback devices? Will they possibly be able to install something to play back softsubs if they don't have it? Is your destination a digital format (Matroska, DVD, etc.) or will you be printing to tape?</p>
<p>&nbsp;</p>
<p>While every situation will be different, you can use some of the following suggestions to guide you. These are based on making a digital format for playback on a computer system.</p>
<p>&nbsp;</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td>If you want your file playable on the largest range of computers and operating systems, you will want to hardsub.</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td>If your audience will have relatively new machines (500 MHz or greater) and will be running on a platform where your subtitle format is well-supported, softsubs are a good idea.</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td>If you want to speed up your release process, use softsubs. They are faster to fix if an error is found.</td></tr></table></div><p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;">Hardsubbing with AVISynth</span></p>
<p>&nbsp;</p>
<p>Many people use the AVISynth package to add filters to their video to clean up defects, or otherwise manipulate the video image before encoding it. It is a very flexible tool, and can be also used to add subtitles directly to the video stream, allowing an easy and scriptable method to hardsub a video.</p>
<p>&nbsp;</p>
<p>If you are unfamiliar with AVISynth, it is recommended that you look into it, as it has lots of nice features and a large community contributing video filters, allowing easy video fixes for any source. This tutorial assumes you have some basic knowledge of AVISynth.</p>
<p>&nbsp;</p>
<p>To allow adding subtitles to the video stream, you need the VSFilter plugin. You can find this at Gabest's <a href="http://sourceforge.net/projects/guliverkli" target="_blank" class="weblink">Sourceforge project page</a>, or in your Aegisub directory (it's called vsfilter.dll). Once you have &nbsp;gotten hold of vsfilter.dll, place it in your AVISynth plugins folder.</p>
<p>&nbsp;</p>
<p>To just add subtitles, you will want to make a simple AVS file containing the script lines you need. Here is an example:</p>
<p>&nbsp;</p>
<p><span class="f_CourierFixed">AVISource("c:\projects\project1\video\mycoolvideo.avi")</span></p>
<p><span class="f_CourierFixed">TextSub("c:\projects\project1\subs\mainsubtitles.ass")</span></p>
<p><span class="f_CourierFixed">TextSub("c:\projects\project1\subs\endkaraoke.ass")</span></p>
<p>&nbsp;</p>
<p>The above script will take an AVI file (mycoolvideo.avi), and then draw the contents of two subtitle files on the video. You can then encode this video in any program that supports AVS, such as VirtualDub.</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><span style="font-weight: bold;">Hardsubbing with VirtualDub</span></p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p>If you're already familiar with VirtualDub filters, and don't intend to do any other video processing, you should note that it's possible to use VSFilter as a VirtualDub filter as well. Just rename the .dll to .vdf and copy it to the VirtualDub plugins folder.</p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p><span style="font-weight: bold;">&nbsp;</span></p>
<p><span style="font-weight: bold;">Softsubbing</span></p>
<p>&nbsp;</p>
<p>Softsubbing a video can be done in several ways, all of which require that VSFilter is installed to view the subtitles.</p>
<p><span style="text-decoration: underline;">&nbsp;</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="text-decoration: underline;">Distributing script files.</span> This method works best when you want to encode the video in an AVI wrapper. You simply send the raw subtitle files along with the video. The viewer then needs to load them in a player that supports external subtitles. When using this method, you either need to make sure you use fonts that everyone can be expected to have installed, or distribute a separate ZIP archive with the fonts.</td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="line-height: normal;"><tr valign="baseline"><td width="13"><span style="font-size: 10pt; font-family: 'Symbol'; font-style: normal; color: #000000; text-decoration: none;">&#183;</span></td><td><span style="text-decoration: underline;">Softsubs inside the video container.</span> Matroska (MKV) is currently the best container for this method (MP4, OGM and even AVI can technically contain softsubs, but none supports font attachments, and all of them has various other issues). Using a muxer that supports attachments (i.e. mkvmerge GUI), you simply add your subtitle files to the Matroska file as separate tracks (just like you add audio and video tracks), and any fonts as attachments (make sure they have the MIME type <span class="f_CourierFixed">application/x-truetype-font</span>). The fonts will then be installed temporarily by Haali Media Splitter (on Windows) or MPlayer (on *nix and MacOS X) during playback.</td></tr></table></div>
</div>
</body>
</html>
